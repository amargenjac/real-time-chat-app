{"ast":null,"code":"import Api from '@/services/Api';\nimport qs from 'qs';\nconst ChatService = {\n  getChatMessages(token, params) {\n    return Api().get('chat', {\n      params: {\n        id: params\n      },\n      paramsSerializer: params => qs.stringify(params.id, {\n        encode: false\n      }),\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n  },\n  sendMessage(token, params, body) {\n    return Api().post('chat', body, {\n      params: {\n        id: params\n      },\n      paramsSerializer: params => qs.stringify(params.id, {\n        encode: false\n      }),\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n  },\n  startChatWithUser(token, body) {\n    return Api().put('create-chat', body, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n  }\n};\nexport default ChatService;","map":{"version":3,"names":["Api","qs","ChatService","getChatMessages","token","params","get","id","paramsSerializer","stringify","encode","headers","sendMessage","body","post","startChatWithUser","put"],"sources":["C:/Users/amarg/real-time-chat-app/client/src/services/ChatService.js"],"sourcesContent":["import Api from '@/services/Api'\r\nimport qs from 'qs'\r\n\r\nconst ChatService = {\r\n    getChatMessages (token, params) {\r\n        return Api().get('chat', {\r\n            params: { id: params },\r\n            paramsSerializer: (params) => qs.stringify(params.id, { encode: false }),\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n    },\r\n    sendMessage (token, params, body) {\r\n        return Api().post('chat', body, {\r\n            params: { id: params },\r\n            paramsSerializer: (params) => qs.stringify(params.id, { encode: false }),\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n    },\r\n\r\n    startChatWithUser (token, body) {\r\n        return Api().put('create-chat', body, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n    }\r\n}\r\nexport default ChatService\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,gBAAgB;AAChC,OAAOC,EAAE,MAAM,IAAI;AAEnB,MAAMC,WAAW,GAAG;EAChBC,eAAeA,CAAEC,KAAK,EAAEC,MAAM,EAAE;IAC5B,OAAOL,GAAG,CAAC,CAAC,CAACM,GAAG,CAAC,MAAM,EAAE;MACrBD,MAAM,EAAE;QAAEE,EAAE,EAAEF;MAAO,CAAC;MACtBG,gBAAgB,EAAGH,MAAM,IAAKJ,EAAE,CAACQ,SAAS,CAACJ,MAAM,CAACE,EAAE,EAAE;QAAEG,MAAM,EAAE;MAAM,CAAC,CAAC;MACxEC,OAAO,EAAE;QACL,eAAe,EAAG,UAASP,KAAM;MACrC;IACJ,CAAC,CAAC;EACN,CAAC;EACDQ,WAAWA,CAAER,KAAK,EAAEC,MAAM,EAAEQ,IAAI,EAAE;IAC9B,OAAOb,GAAG,CAAC,CAAC,CAACc,IAAI,CAAC,MAAM,EAAED,IAAI,EAAE;MAC5BR,MAAM,EAAE;QAAEE,EAAE,EAAEF;MAAO,CAAC;MACtBG,gBAAgB,EAAGH,MAAM,IAAKJ,EAAE,CAACQ,SAAS,CAACJ,MAAM,CAACE,EAAE,EAAE;QAAEG,MAAM,EAAE;MAAM,CAAC,CAAC;MACxEC,OAAO,EAAE;QACL,eAAe,EAAG,UAASP,KAAM;MACrC;IACJ,CAAC,CAAC;EACN,CAAC;EAEDW,iBAAiBA,CAAEX,KAAK,EAAES,IAAI,EAAE;IAC5B,OAAOb,GAAG,CAAC,CAAC,CAACgB,GAAG,CAAC,aAAa,EAAEH,IAAI,EAAE;MAClCF,OAAO,EAAE;QACL,eAAe,EAAG,UAASP,KAAM;MACrC;IACJ,CAAC,CAAC;EACN;AACJ,CAAC;AACD,eAAeF,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}