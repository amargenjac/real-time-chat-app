{"ast":null,"code":"import ChatService from '@/services/ChatService';\nimport { socket, state } from '@/socket';\nexport default {\n  name: 'ChatView',\n  data() {\n    return {\n      userChat: state.UserChats.find(userChat => userChat.chatId == this.$route.query.id).messages\n    };\n  },\n  components: {},\n  props: [],\n  methods: {\n    async sendMessage() {\n      try {\n        const body = {\n          messageText: this.textMessage\n        };\n        const params = {\n          id: this.$route.query.id\n        };\n        await ChatService.sendMessage(localStorage.getItem('token'), params, body);\n        socket.emit(\"new message\", {\n          content: this.textMessage,\n          to: this.$route.query.id\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  },\n  mounted() {}\n};","map":{"version":3,"names":["ChatService","socket","state","name","data","userChat","UserChats","find","chatId","$route","query","id","messages","components","props","methods","sendMessage","body","messageText","textMessage","params","localStorage","getItem","emit","content","to","e","console","error","mounted"],"sources":["C:\\Users\\amarg\\real-time-chat-app\\client\\src\\components\\Chat.vue"],"sourcesContent":["<template>\r\n    <div class=\"wrapper\">\r\n        <v-list>\r\n            <div class=\"message-wrapper\">\r\n                <v-list-item class=\"list-messages\" v-for=\"(message, index) in userChat\" :key=\"index\"\r\n                    :title=\"message.senderUsername\" :subtitle=\"message.messageText\" />\r\n            </div>\r\n            <br>\r\n        </v-list>\r\n        <div class=\"input-wrapper\" v-if=\"messages\">\r\n            <v-textarea class=\"input-box\" label=\"New message\" variant=\"outlined\" v-model=\"textMessage\"></v-textarea>\r\n            <v-btn variant=\"outlined\" @click=\"sendMessage\">\r\n                Send\r\n            </v-btn>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport ChatService from '@/services/ChatService'\r\nimport { socket, state } from '@/socket'\r\n\r\n\r\nexport default {\r\n    name: 'ChatView',\r\n    data () {\r\n        return {\r\n            userChat: state.UserChats.find(userChat => userChat.chatId == this.$route.query.id).messages\r\n        }\r\n    },\r\n    components: {\r\n    },\r\n    props: [\r\n    ],\r\n    methods: {\r\n        async sendMessage () {\r\n            try {\r\n                const body = {\r\n                    messageText: this.textMessage\r\n                }\r\n                const params = {\r\n                    id: this.$route.query.id\r\n                }\r\n                await ChatService.sendMessage(localStorage.getItem('token'), params, body)\r\n\r\n                socket.emit(\"new message\", {\r\n                    content: this.textMessage,\r\n                    to: this.$route.query.id,\r\n                });\r\n\r\n            } catch (e) {\r\n                console.error(e)\r\n            }\r\n        }\r\n    },\r\n    mounted () {\r\n    }\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.input-box {\r\n    justify-content: center;\r\n    max-width: 500px;\r\n}\r\n\r\n.input-wrapper {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 40px;\r\n}\r\n\r\n.list-messages {\r\n    text-align: left;\r\n}\r\n\r\n.wrapper {\r\n    min-width: 100%;\r\n}\r\n\r\n.message-wrapper {\r\n    background-color: gray;\r\n    max-width: fit-content;\r\n    margin-top: 20px;\r\n    margin-left: 20px;\r\n}\r\n</style>"],"mappings":"AAmBA,OAAOA,WAAU,MAAO,wBAAuB;AAC/C,SAASC,MAAM,EAAEC,KAAI,QAAS,UAAS;AAGvC,eAAe;EACXC,IAAI,EAAE,UAAU;EAChBC,IAAGA,CAAA,EAAK;IACJ,OAAO;MACHC,QAAQ,EAAEH,KAAK,CAACI,SAAS,CAACC,IAAI,CAACF,QAAO,IAAKA,QAAQ,CAACG,MAAK,IAAK,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,EAAE,CAAC,CAACC;IACxF;EACJ,CAAC;EACDC,UAAU,EAAE,CACZ,CAAC;EACDC,KAAK,EAAE,EACN;EACDC,OAAO,EAAE;IACL,MAAMC,WAAUA,CAAA,EAAK;MACjB,IAAI;QACA,MAAMC,IAAG,GAAI;UACTC,WAAW,EAAE,IAAI,CAACC;QACtB;QACA,MAAMC,MAAK,GAAI;UACXT,EAAE,EAAE,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC;QAC1B;QACA,MAAMX,WAAW,CAACgB,WAAW,CAACK,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAEF,MAAM,EAAEH,IAAI;QAEzEhB,MAAM,CAACsB,IAAI,CAAC,aAAa,EAAE;UACvBC,OAAO,EAAE,IAAI,CAACL,WAAW;UACzBM,EAAE,EAAE,IAAI,CAAChB,MAAM,CAACC,KAAK,CAACC;QAC1B,CAAC,CAAC;MAEN,EAAE,OAAOe,CAAC,EAAE;QACRC,OAAO,CAACC,KAAK,CAACF,CAAC;MACnB;IACJ;EACJ,CAAC;EACDG,OAAMA,CAAA,EAAK,CACX;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}