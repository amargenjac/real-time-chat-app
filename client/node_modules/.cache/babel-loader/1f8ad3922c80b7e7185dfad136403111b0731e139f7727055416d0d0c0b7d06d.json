{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AuthService from '../services/AuthService';\nexport default {\n  name: 'RegisterView',\n  data() {\n    return {\n      email: '',\n      username: '',\n      password: '',\n      error: null\n    };\n  },\n  methods: {\n    async register() {\n      try {\n        const response = await AuthService.register({\n          email: this.email,\n          username: this.username,\n          password: this.password\n        });\n        console.log(response.data);\n        if (response.data.status == 'Success') {\n          this.redirectToLogin();\n        }\n      } catch (e) {\n        this.error = e.response.data.message;\n      }\n    },\n    redirectToLogin() {\n      this.$router.push(\"/login\");\n    }\n  }\n};","map":{"version":3,"names":["AuthService","name","data","email","username","password","error","methods","register","response","console","log","status","redirectToLogin","e","message","$router","push"],"sources":["C:\\Users\\amarg\\real-time-chat-app\\client\\src\\components\\Register.vue"],"sourcesContent":["<template>\r\n    <div class=\"register\">\r\n        <h1>Register</h1>\r\n        <br>\r\n        <v-text-field label=\"Email\" variant=\"solo-filled\" v-model=\"email\"></v-text-field>\r\n        <br />\r\n        <v-text-field label=\"Username\" variant=\"solo-filled\" v-model=\"username\"></v-text-field>\r\n        <br />\r\n        <v-text-field label=\"Password\" variant=\"solo-filled\" type=\"password\" v-model=\"password\"></v-text-field>\r\n        <br />\r\n        <v-col cols=\"auto\">\r\n            <v-btn elevation=\"4\" size=\"x-large\" @click=\"register\">Sign Up</v-btn>\r\n        </v-col>\r\n        <h4>Or</h4>\r\n        <v-col cols=\"auto\">\r\n            <v-btn elevation=\"4\" size=\"x-large\" @click=\"redirectToLogin\">Sign in</v-btn>\r\n        </v-col>\r\n        <br>\r\n        <div class=\"danger-alert\" v-html=\"error\" />\r\n        <br>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport AuthService from '../services/AuthService'\r\nexport default {\r\n    name: 'RegisterView',\r\n    data () {\r\n        return {\r\n            email: '',\r\n            username: '',\r\n            password: '',\r\n            error: null\r\n        }\r\n    },\r\n    methods: {\r\n        async register () {\r\n            try {\r\n                const response = await AuthService.register({\r\n                    email: this.email,\r\n                    username: this.username,\r\n                    password: this.password\r\n                })\r\n                console.log(response.data)\r\n                if (response.data.status == 'Success') {\r\n                    this.redirectToLogin()\r\n                }\r\n            } catch (e) {\r\n                this.error = e.response.data.message\r\n            }\r\n        },\r\n        redirectToLogin () {\r\n            this.$router.push(\"/login\")\r\n        }\r\n    }\r\n}\r\n</script>\r\n  \r\n<style scoped>\r\n.register {\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    background-color: #fff;\r\n}\r\n\r\nh1 {\r\n    text-align: center;\r\n    color: #333;\r\n}\r\n\r\n.input {\r\n    width: 100%;\r\n    padding: 10px;\r\n    margin-bottom: 10px;\r\n    box-sizing: border-box;\r\n}\r\n\r\nbutton {\r\n    width: 100%;\r\n    padding: 10px;\r\n    background-color: lightseagreen;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n}\r\n\r\n.danger-alert {\r\n    color: red\r\n}\r\n</style>\r\n  "],"mappings":";AAwBA,OAAOA,WAAU,MAAO,yBAAwB;AAChD,eAAe;EACXC,IAAI,EAAE,cAAc;EACpBC,IAAGA,CAAA,EAAK;IACJ,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;IACX;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,QAAOA,CAAA,EAAK;MACd,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMT,WAAW,CAACQ,QAAQ,CAAC;UACxCL,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACnB,CAAC;QACDK,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACP,IAAI;QACzB,IAAIO,QAAQ,CAACP,IAAI,CAACU,MAAK,IAAK,SAAS,EAAE;UACnC,IAAI,CAACC,eAAe,CAAC;QACzB;MACJ,EAAE,OAAOC,CAAC,EAAE;QACR,IAAI,CAACR,KAAI,GAAIQ,CAAC,CAACL,QAAQ,CAACP,IAAI,CAACa,OAAM;MACvC;IACJ,CAAC;IACDF,eAAcA,CAAA,EAAK;MACf,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC,QAAQ;IAC9B;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}