{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createElementVNode as _createElementVNode, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-c3267a18\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"message-wrapper\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1));\nconst _hoisted_4 = {\n  key: 0,\n  class: \"input-wrapper\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_list_item = _resolveComponent(\"v-list-item\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  const _component_v_textarea = _resolveComponent(\"v-textarea\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_v_list, null, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.userChat, (message, index) => {\n      return _openBlock(), _createBlock(_component_v_list_item, {\n        class: \"list-messages\",\n        key: index,\n        title: message.senderUsername,\n        subtitle: message.messageText\n      }, null, 8, [\"title\", \"subtitle\"]);\n    }), 128))]), _hoisted_3]),\n    _: 1\n  }), _ctx.messages ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_v_textarea, {\n    class: \"input-box\",\n    label: \"New message\",\n    variant: \"outlined\",\n    modelValue: _ctx.textMessage,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.textMessage = $event)\n  }, null, 8, [\"modelValue\"]), _createVNode(_component_v_btn, {\n    variant: \"outlined\",\n    onClick: $options.sendMessage\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Send \")]),\n    _: 1\n  }, 8, [\"onClick\"])])) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_createVNode","_component_v_list","default","_withCtx","_hoisted_2","_Fragment","_renderList","$data","userChat","message","index","_createBlock","_component_v_list_item","title","senderUsername","subtitle","messageText","_hoisted_3","_","_ctx","messages","_hoisted_4","_component_v_textarea","label","variant","modelValue","textMessage","_cache","$event","_component_v_btn","onClick","$options","sendMessage","_createTextVNode","_createCommentVNode"],"sources":["C:\\Users\\amarg\\real-time-chat-app\\client\\src\\components\\Chat.vue"],"sourcesContent":["<template>\r\n    <div class=\"wrapper\">\r\n        <v-list>\r\n            <div class=\"message-wrapper\">\r\n                <v-list-item class=\"list-messages\" v-for=\"(message, index) in userChat\" :key=\"index\"\r\n                    :title=\"message.senderUsername\" :subtitle=\"message.messageText\" />\r\n            </div>\r\n            <br>\r\n        </v-list>\r\n        <div class=\"input-wrapper\" v-if=\"messages\">\r\n            <v-textarea class=\"input-box\" label=\"New message\" variant=\"outlined\" v-model=\"textMessage\"></v-textarea>\r\n            <v-btn variant=\"outlined\" @click=\"sendMessage\">\r\n                Send\r\n            </v-btn>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport ChatService from '@/services/ChatService'\r\nimport { socket, state } from '@/socket'\r\n\r\n\r\nexport default {\r\n    name: 'ChatView',\r\n    data () {\r\n        return {\r\n            userChat: state.UserChats.find(userChat => userChat.chatId == this.$route.query.id).messages\r\n        }\r\n    },\r\n    components: {\r\n    },\r\n    props: [\r\n    ],\r\n    methods: {\r\n        async sendMessage () {\r\n            try {\r\n                const body = {\r\n                    messageText: this.textMessage\r\n                }\r\n                const params = {\r\n                    id: this.$route.query.id\r\n                }\r\n                await ChatService.sendMessage(localStorage.getItem('token'), params, body)\r\n\r\n                socket.emit(\"new message\", {\r\n                    content: this.textMessage,\r\n                    to: this.$route.query.id,\r\n                });\r\n\r\n            } catch (e) {\r\n                console.error(e)\r\n            }\r\n        }\r\n    },\r\n    mounted () {\r\n    }\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.input-box {\r\n    justify-content: center;\r\n    max-width: 500px;\r\n}\r\n\r\n.input-wrapper {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 40px;\r\n}\r\n\r\n.list-messages {\r\n    text-align: left;\r\n}\r\n\r\n.wrapper {\r\n    min-width: 100%;\r\n}\r\n\r\n.message-wrapper {\r\n    background-color: gray;\r\n    max-width: fit-content;\r\n    margin-top: 20px;\r\n    margin-left: 20px;\r\n}\r\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAS;;EAEPA,KAAK,EAAC;AAAiB;gEAI5BC,mBAAA,CAAI;;EAPhBC,GAAA;EASaF,KAAK,EAAC;;;;;;;uBARfG,mBAAA,CAcM,OAdNC,UAcM,GAbFC,YAAA,CAMSC,iBAAA;IARjBC,OAAA,EAAAC,QAAA,CAGY,MAGM,CAHNP,mBAAA,CAGM,OAHNQ,UAGM,I,kBAFFN,mBAAA,CACsEO,SAAA,QALtFC,WAAA,CAI8EC,KAAA,CAAAC,QAAQ,EAJtF,CAI2DC,OAAO,EAAEC,KAAK;2BAAzDC,YAAA,CACsEC,sBAAA;QADzDjB,KAAK,EAAC,eAAe;QAAuCE,GAAG,EAAEa,KAAK;QAC9EG,KAAK,EAAEJ,OAAO,CAACK,cAAc;QAAGC,QAAQ,EAAEN,OAAO,CAACO;;iBAE3DC,UAAI,C;IAPhBC,CAAA;MASyCC,IAAA,CAAAC,QAAQ,I,cAAzCtB,mBAAA,CAKM,OALNuB,UAKM,GAJFrB,YAAA,CAAwGsB,qBAAA;IAA5F3B,KAAK,EAAC,WAAW;IAAC4B,KAAK,EAAC,aAAa;IAACC,OAAO,EAAC,UAAU;IAVhFC,UAAA,EAU0FN,IAAA,CAAAO,WAAW;IAVrG,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAU0FT,IAAA,CAAAO,WAAW,GAAAE,MAAA;+BACzF5B,YAAA,CAEQ6B,gBAAA;IAFDL,OAAO,EAAC,UAAU;IAAEM,OAAK,EAAEC,QAAA,CAAAC;;IAX9C9B,OAAA,EAAAC,QAAA,CAW2D,MAE/C,CAbZ8B,gBAAA,CAW2D,QAE/C,E;IAbZf,CAAA;0BAAAgB,mBAAA,W"},"metadata":{},"sourceType":"module","externalDependencies":[]}